function closenav(){nav.classList.remove("nav-open"),btnMenu.style.marginRight="0",showscroll()}function togglenav(){nav.classList.toggle("nav-open"),nav.classList.contains("nav-open")?(btnMenu.style.marginRight=window.innerWidth-html.offsetWidth+"px",hidescroll()):(showscroll(),btnMenu.style.marginRight="0")}function hidescroll(){body.style.paddingRight=window.innerWidth-html.offsetWidth+"px",body.style.overflow="hidden"}function showscroll(){body.style.paddingRight=0,body.style.overflow="visible"}body=document.querySelector("body"),html=document.querySelector("html"),header=document.querySelector("header"),btnMenu=document.querySelector(".btn-menu"),nav=document.querySelector(".nav"),document.querySelector(".btn-menu").addEventListener("click",togglenav),document.querySelector(".nav-menu").onclick=closenav,document.querySelector(".nav-background").onclick=closenav;let scrolid=0;function togglescroll(){0==scrolid?(body.style.paddingRight=window.innerWidth-html.offsetWidth+"px",body.style.overflow="hidden",scrolid=1):(body.style.paddingRight=0,body.style.overflow="visible",scrolid=0)}function pagescroll(){let e=0;window.addEventListener("scroll",(function(){e<pageYOffset&pageYOffset>header.offsetHeight?header.style="transform:translateY(-100%)":header.style="transform:none ;",e=pageYOffset}))}window.onload=function(){pagescroll()};const cards=document.querySelectorAll(".card-dark");if(cards.length>-1)for(let e=0;e<cards.length;e++)cards[e].addEventListener("click",(function(){cards[e].classList.toggle("card-dark-active")}));window.addEventListener("load",(function(){new Swiper(".cards1",{pagination:{el:".swiper-pagination"}})}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
