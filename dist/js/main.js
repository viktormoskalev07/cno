function closenav(){nav.classList.remove("nav-open"),btnMenu.style.marginRight="0",showscroll()}function togglenav(){nav.classList.toggle("nav-open"),nav.classList.contains("nav-open")?(btnMenu.style.marginRight=window.innerWidth-html.offsetWidth+"px",hidescroll()):(showscroll(),btnMenu.style.marginRight="0")}function hidescroll(){body.style.paddingRight=window.innerWidth-html.offsetWidth+"px",body.style.overflow="hidden"}function showscroll(){body.style.paddingRight=0,body.style.overflow="visible"}body=document.querySelector("body"),html=document.querySelector("html"),header=document.querySelector("header"),btnMenu=document.querySelector(".btn-menu"),nav=document.querySelector(".nav"),document.querySelector(".btn-menu").addEventListener("click",togglenav),document.querySelector(".nav-menu").onclick=closenav,document.querySelector(".nav-background").onclick=closenav;let scrolid=0;function togglescroll(){0==scrolid?(body.style.paddingRight=window.innerWidth-html.offsetWidth+"px",body.style.overflow="hidden",scrolid=1):(body.style.paddingRight=0,body.style.overflow="visible",scrolid=0)}function pagescroll(){let e=0;window.addEventListener("scroll",(function(){if(e>2)header.classList.add("header-bg-js");else try{header.classList.remove("header-bg-js")}catch(e){console.log(e)}e<pageYOffset&pageYOffset>header.offsetHeight?header.style="transform:translateY(-100%)":header.style="transform:none ;",e=pageYOffset}))}window.onload=function(){pagescroll()};const cards=document.querySelectorAll(".card-dark");function cardsToggler(){if(cards.length>-1)for(let e=0;e<cards.length;e++)cards[e].addEventListener("click",(function(){this.classList.toggle("card-dark-active")})),cards[e].addEventListener("keypress",(function(e){"Enter"==e.key&&this.classList.toggle("card-dark-active")}))}window.addEventListener("load",cardsToggler),window.addEventListener("load",(function(){if(this.document.querySelector(".cards1"))try{new Swiper(".cards1",{pagination:{el:".swiper-pagination"}})}catch(e){console.log(e)}const e=document.getElementById("swiper-tabs-wrap"),t=document.getElementById("tabs-box");function n(){let n=window.matchMedia("(min-width: 0px) and (max-width:692px)"),o=window.matchMedia("(min-width: 693px)");n.matches?e&&t&&(t.style.display="none",e.style.display="block"):o.matches&&e&&t&&(e.style.display="none",t.style.display="block")}n(),new Swiper(".swiper-tabs",{pagination:{el:".swiper-pagination-tabs"},breakpoints:{320:{slidesPerView:1,spaceBetween:20}}}),document.querySelector(".swiper-tabs")&&(window.addEventListener("load",(function(){n()})),window.addEventListener("resize",(function(){n()})))}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
